@book{clean-code,
  author = {Martin, Robert C.},
  title = {Clean Code: A Handbook of Agile Software Craftsmanship},
  year = {2008},
  isbn = {0132350882},
  publisher = {Prentice Hall PTR},
  address = {USA},
  edition = {1},
  abstract = {Even bad code can function. But if code isnt clean, it
                  can bring a development organization to its
                  knees. Every year, countless hours and significant
                  resources are lost because of poorly written
                  code. But it doesnt have to be that way.Noted
                  software expert Robert C. Martin, presents a
                  revolutionary paradigm with Clean Code: A Handbook
                  of Agile Software Craftsmanship. Martin, who has
                  helped bring agile principles from a practitioners
                  point of view to tens of thousands of programmers,
                  has teamed up with his colleagues from Object Mentor
                  to distill their best agile practice of cleaning
                  code on the fly into a book that will instill within
                  you the values of software craftsman, and make you a
                  better programmerbut only if you work at it.What
                  kind of work will you be doing? Youll be reading
                  codelots of code. And you will be challenged to
                  think about whats right about that code, and whats
                  wrong with it. More importantly you will be
                  challenged to reassess your professional values and
                  your commitment to your craft. Clean Code is divided
                  into three parts. The first describes the
                  principles, patterns, and practices of writing clean
                  code. The second part consists of several case
                  studies of increasing complexity. Each case study is
                  an exercise in cleaning up codeof transforming a
                  code base that has some problems into one that is
                  sound and efficient. The third part is the payoff: a
                  single chapter containing a list of heuristics and
                  smells gathered while creating the case studies. The
                  result is a knowledge base that describes the way we
                  think when we write, read, and clean code.Readers
                  will come away from this book understandingHow to
                  tell the difference between good and bad codeHow to
                  write good code and how to transform bad code into
                  good codeHow to create good names, good functions,
                  good objects, and good classesHow to format code for
                  maximum readability How to implement complete error
                  handling without obscuring code logicHow to unit
                  test and practice test-driven developmentWhat smells
                  and heuristics can help you identify bad codeThis
                  book is a must for any developer, software engineer,
                  project manager, team lead, or systems analyst with
                  an interest in producing better code.}
}

@book{code-complete,
  author = {McConnell, Steve},
  title = {Code Complete, Second Edition},
  year = {2004},
  isbn = {0735619670},
  publisher = {Microsoft Press},
  address = {USA},
  abstract = {Take a strategic approach to software construction-and
                  produce superior products-with this fully updated
                  edition of Steve McConnell's critically praised and
                  award-winning guide to software development best
                  practices.}
}

@book{the-cpp-programming-language-1st,
  author = {Stroustrup, Bjarne},
  title = {The C++ Programming Language},
  publisher = {Addison-Wesley},
  year = {1986},
  address = {Reading, Mass},
  isbn = {020112078X}
}

@book{the-cpp-programming-language-2nd,
  author = {Stroustrup, Bjarne},
  title = {The C++ programming language},
  publisher = {Addison-Wesley},
  year = {1991},
  address = {Reading, Mass},
  isbn = {0201539926}
}

@book{the-cpp-programming-language-3rd,
  author = {Stroustrup, Bjarne},
  title = {The C++ programming language},
  publisher = {Addison-Wesley},
  year = {1997},
  address = {Reading, Mass},
  isbn = {0201889544}
}

@book{the-cpp-programming-language-se,
  author = {Stroustrup, Bjarne},
  title = {The C++ programming language},
  publisher = {Addison-Wesley},
  year = {2000},
  address = {Boston},
  isbn = {0201700735}
}

@book{the-cpp-programming-language-4th,
  author = {Stroustrup, Bjarne},
  title = {The C++ programming language},
  publisher = {Addison-Wesley},
  year = {2013},
  address = {Upper Saddle River, NJ},
  isbn = {0321563840}
}

@misc{2021-annual-cpp-developer-survey,
  author = {Standard C++ Foundation},
  title = {\emph{2021 Annual C++ Developer Survey ``Lite''}},
  year = {2021},
  note = {\url{https://isocpp.org/files/papers/CppDevSurvey-2021-04-summary.pdf}}
}

@misc{compile-health,
  author = {Trettner, Philip},
  title = {\emph{C++ Compile Health Watchdog}},
  year = {2020},
  howpublished = {\url{https://artificial-mind.net/projects/compile-health/}}
}

@misc{stl-header-heft,
  author = {Douglas, Niall},
  title = {\emph{STL Header Heft}},
  year = {2020},
  howpublished = {\url{https://github.com/ned14/stl-header-heft}}
}

@techreport{pcg,
  title = {\emph{PCG: A Family of Simple Fast Space-Efficient Statistically Good Algorithms for Random Number Generation}},
  author = {Melissa E. O'Neill},
  institution = {Harvey Mudd College},
  address = {Claremont, CA},
  number = {HMC-CS-2014-0905},
  year = {2014},
  month = Sep,
  xurl = {https://www.cs.hmc.edu/tr/hmc-cs-2014-0905.pdf},
}

@misc{beware-of-copies-initializer-list,
  author = {Tristan Brindle},
  title = {\emph{Beware of copies with std::initializer\_list!}},
  year = {2020},
  howpublished = {\url{https://tristanbrindle.com/posts/beware-copies-initializer-list}}
}